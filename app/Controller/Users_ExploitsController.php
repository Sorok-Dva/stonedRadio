<?php
/**
 * @Author  : Created by Llyam Garcia.
 * @Nick    : Liightman
 * @Date    : 14/08/2015
 * @Time    : 16:43
 * @File    : Users_ExploitsController.php
 * @Version : 1.4
 */

namespace App\Controller;

use App\Table;
use Core\Auth\DBAuth;
use Core\HTML\BootstrapForm;
use \App;

class Users_ExploitsController extends AppController{

    public function __construct(){
        parent::__construct();
        $this->loadModel('User');
        $this->loadModel('Users_Exploit');
    }

    public function MAJExploits(){

        $return = $this->User->select($_SESSION['user_id']);
        $points =  $return->points;
        $id = $_SESSION['user_id'];

        /**
         * Exploit pour les membres de l'Ã©quipe du site
         */
        if(($_SESSION['grade'] == "Adm") OR ($_SESSION['grade'] == "Mod") OR ($_SESSION['grade'] == "Dev")):
            $check = $this->Users_Exploit->checkIfAlreadyHad('STAFF', 'Infini');
            if (!$check) {
                $result = $this->Users_Exploit->create([
                    'uniq_id' => uniqid(),
                    'user_id' => $_SESSION['user_id'],
                    'type' => "STAFF",
                    'lvl' => "Infini",
                    'date1' => time(),
                ]);
                $result = $this->User->update($_SESSION['id'], [
                    'points' => $points+1500,
                ]);
                successExploit('STAFF', 'Infini');
            }
        endif;

        /**
         * Exploit pour les animateurs
         */
        if($_SESSION['grade'] == "Anim"):
            $check = $this->Users_Exploit->checkIfAlreadyHad('Anim', 'Infini');
            if (!$check) {
                $result = $this->Users_Exploit->create([
                    'uniq_id' => uniqid(),
                    'user_id' => $_SESSION['user_id'],
                    'type' => "Anim",
                    'lvl' => "Infini",
                    'date1' => time(),
                ]);
                $result = $this->User->update($_SESSION['id'], [
                    'points' => $points+1000,
                ]);
                successExploit('Anim', 'Infini');
            }
        endif;
        /**
         * Exploit pour les fondateurs
         */
        if($_SESSION['pseudo'] == "Nico"):
            $check = $this->Users_Exploit->checkIfAlreadyHad('Fondateur', 'Infini');
            if (!$check) {
                $result = $this->Users_Exploit->create([
                    'uniq_id' => uniqid(),
                    'user_id' => $_SESSION['user_id'],
                    'type' => "Fondateur",
                    'lvl' => "Infini",
                    'date1' => time(),
                ]);
                $result = $this->User->update($_SESSION['id'], [
                    'points' => $points+2000,
                ]);
            }
        endif;

        /**
         * Gestion des exploits concernant les dedis
         */
        $dedi = $this->Users_Exploit->ExploitDedi();
        if($dedi){
            $id = getExploitId('Dedi', $_SESSION['user_id']);
            updateActualExploit('Dedi', $dedi);

            if (($dedi >= 1) AND ($dedi < 50)) {
                $check = $this->Users_Exploit->checkIfAlreadyHad('Dedi', '1');
                if (!$check) {
                    $result = $this->Users_Exploit->create([
                        'uniq_id' => uniqid(),
                        'actual' => $dedi,
                        'user_id' => $_SESSION['user_id'],
                        'type' => "Dedi",
                        'lvl' => "1",
                        'date1' => time(),
                    ]);
                    $result = $this->User->update($_SESSION['id'], [
                        'points' => $points+5,
                    ]);
                    successExploit('Dedi', '1');
                }
            } elseif (($dedi >= 50) AND ($dedi < 100)) {
                $check = $this->Users_Exploit->checkIfAlreadyHad('Dedi', '2');
                if (!$check) {
                    $resultInsert = $this->Users_Exploit->update($id, [
                        'lvl' => "2",
                        'actual' => $dedi,
                        'date2' => time()
                    ]);
                    $result = $this->User->update($_SESSION['id'], [
                        'points' => $points+25,
                    ]);
                    successExploit('Dedi', '2');
                }
            }elseif (($dedi >= 100) AND ($dedi < 500)) {
                $check = $this->Users_Exploit->checkIfAlreadyHad('Dedi', '3');
                if (!$check) {
                    $result = $this->Users_Exploit->update($id, [
                        'lvl' => "3",
                        'actual' => $dedi,
                        'date3' => time()
                    ]);
                    $result = $this->User->update($_SESSION['id'], [
                        'points' => $points+150,
                    ]);
                    successExploit('Dedi', '3');
                }
            } elseif ($dedi > 500) {
                $check = $this->Users_Exploit->checkIfAlreadyHad('Dedi', '4');
                if (!$check) {
                    $result = $this->Users_Exploit->update($id, [
                        'lvl' => "4",
                        'actual' => $dedi,
                        'date4' => time()
                    ]);
                    $result = $this->User->update($_SESSION['id'], [
                        'points' => $points+1000,
                    ]);
                    successExploit('Dedi', '4');
                }
            } if(!$this->Users_Exploit->checkIfCreated('Dedi')) {
                $result = $this->Users_Exploit->create([
                    'uniq_id' => uniqid(),
                    'actual' => $dedi,
                    'user_id' => $_SESSION['user_id'],
                    'type' => "Dedi",
                    'lvl' => "1",
                    'date1' => time(),
                ]);
            }
        }
        /**
         * Exploits pour les donateurs (VIP)
         */

    }

}